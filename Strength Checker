import re

def check_password_strength(password):
    # Criteria definitions
    length_criteria = len(password) >= 8
    lowercase_criteria = re.search(r'[a-z]', password) is not None
    uppercase_criteria = re.search(r'[A-Z]', password) is not None
    number_criteria = re.search(r'\d', password) is not None
    special_char_criteria = re.search(r'[!@#$%^&*(),.?":{}|<>]', password) is not None

    # Check each criterion and provide feedback
    criteria_met = 0
    feedback = []
    
    if length_criteria:
        criteria_met += 1
    else:
        feedback.append("Password should be at least 8 characters long.")
    
    if lowercase_criteria:
        criteria_met += 1
    else:
        feedback.append("Password should contain at least one lowercase letter.")
    
    if uppercase_criteria:
        criteria_met += 1
    else:
        feedback.append("Password should contain at least one uppercase letter.")
    
    if number_criteria:
        criteria_met += 1
    else:
        feedback.append("Password should contain at least one number.")
    
    if special_char_criteria:
        criteria_met += 1
    else:
        feedback.append("Password should contain at least one special character.")

    # Determine the password strength
    if criteria_met == 5:
        strength = "Very Strong"
    elif criteria_met == 4:
        strength = "Strong"
    elif criteria_met == 3:
        strength = "Moderate"
    else:
        strength = "Weak"

    return strength, feedback

def main():
    while True:
        password = input("Enter a password to check its strength: ")
        strength, feedback = check_password_strength(password)
        print(f"Password Strength: {strength}")
        
        if feedback:
            print("Feedback:")
            for comment in feedback:
                print(f" - {comment}")
        
        continue_choice = input("Do you want to check another password? (yes/no): ").lower()
        if continue_choice != 'yes':
            break

if __name__ == "__main__":
    main()
